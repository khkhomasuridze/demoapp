{"version":3,"sources":["redux/slices/loginSlice.js","components/nav/nav.js","pages/home/home.js","axios/axiosInstance.js","pages/login/login.js","axios/httpServices/post.js","pages/posts/posts.js","pages/editPost/editPost.js","App.js","redux/store.js","index.js"],"names":["initialState","isLoggedIn","isAdmin","email","token","localStorage","loginSlice","createSlice","name","reducers","login","state","action","payload","setItem","logout","removeItem","actions","Nav","userDate","useSelector","user","dispatch","useDispatch","className","to","id","onClick","Home","getAxiosIntance","isTokenRequired","headers","getItem","instance","axios","create","baseURL","Login","onSubmit","e","preventDefault","form","FormData","target","get","type","required","defaultValue","getAllPosts","Posts","useState","posts","setPosts","useEffect","then","res","data","deleteHandler","postId","delete","length","map","post","title","body","EditPost","useParams","history","useHistory","setPost","getPostById","undefined","updatedPost","put","updatePost","alert","replace","catch","console","log","rows","App","path","exact","store","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85260ed5.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  isAdmin: false,\r\n  email: null,\r\n  token: null \r\n}\r\n\r\nif(localStorage.token){\r\n  initialState.isLoggedIn = true;\r\n  initialState.isAdmin = localStorage.isAdmin == 'false' ? false : true;\r\n  initialState.email = localStorage.email;\r\n  initialState.token = localStorage.token\r\n}\r\n\r\nexport const loginSlice = createSlice({\r\n  name: 'login',\r\n  initialState, \r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.isLoggedIn = true;\r\n      state.isAdmin = action.payload.isAdmin\r\n      state.email = action.payload.email \r\n      state.token = action.payload.token \r\n\r\n\r\n      localStorage.setItem(\"token\", action.payload.token)\r\n      localStorage.setItem(\"email\", action.payload.email)\r\n      localStorage.setItem(\"isAdmin\", action.payload.isAdmin)\r\n    },\r\n    logout: (state) => {\r\n      state.isLoggedIn = false\r\n      state.token = null \r\n      localStorage.removeItem(\"token\")\r\n      localStorage.removeItem(\"email\")\r\n      localStorage.removeItem(\"isAdmin\")\r\n    }\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { login, logout } = loginSlice.actions\r\nexport default loginSlice.reducer","import { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../redux/slices/loginSlice\";\r\n\r\n\r\nconst Nav = () => {\r\n\r\n\r\n  const userDate = useSelector((state) => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  return <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <div className=\"container-fluid\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\">Navbar</NavLink>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/\">Home</NavLink>\r\n          </li>\r\n          {\r\n            !userDate.isLoggedIn && <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n            </li>\r\n          }\r\n          {\r\n            userDate.isLoggedIn && <li className=\"nav-item ml-auto\">\r\n              <NavLink className=\"nav-link\" to=\"/posts\">Posts</NavLink>\r\n            </li>\r\n          }\r\n        </ul>\r\n\r\n        {\r\n          userDate.isLoggedIn && <ul className=\"navbar-nav ms-auto\">\r\n            <li className=\"nav-item\">\r\n              <button className=\"btn btn-success\" onClick={()=> dispatch(logout())}>LogOut - { userDate.email }</button>\r\n            </li>\r\n          </ul>\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  </nav>\r\n}\r\n \r\nexport default Nav;","const Home = () => {\r\n  return <h3 className=\"text-center py-5\">Welcome Page</h3>;\r\n}\r\n \r\nexport default Home;","import axios from \"axios\"\r\n\r\nconst getAxiosIntance = (isTokenRequired = false)=>{\r\n\r\n  const headers = { }\r\n\r\n  if(isTokenRequired){\r\n    headers['Authorization'] = `Bearer ${localStorage.getItem(\"token\")}`\r\n  }\r\n\r\n  const instance = axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com',\r\n    headers\r\n  });\r\n\r\n  return instance;\r\n}\r\n\r\nexport default getAxiosIntance;","import './login.css'\r\nimport { UserLogin } from '../../axios/httpServices/account';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { login } from '../../redux/slices/loginSlice';\r\n\r\nconst Login = () => {\r\n\r\n  // const count = useSelector((state) => state.login.isLoggedIn)\r\n  const dispatch = useDispatch()\r\n\r\n  const formSubmitHandler = (e)=>{\r\n\r\n    e.preventDefault();\r\n\r\n\r\n\r\n    const form = new FormData(e.target);\r\n\r\n    const formDateObj = {\r\n      email: form.get(\"email\"),\r\n      password: form.get(\"password\")\r\n    }\r\n    \r\n\r\n    dispatch(login({\r\n      isAdmin: true,\r\n      email: 'test@gmail.com',\r\n      token: 'my token'\r\n    }))\r\n\r\n    // UserLogin(formDateObj)\r\n    //   .then(res => {\r\n    //     dispatch(login({\r\n    //       isAdmin: true,\r\n    //       email: 'test@gmail.com',\r\n    //       token: 'my token'\r\n    //     }))\r\n\r\n    //   })\r\n    //   .catch(res => {\r\n    //     alert(\"Invalid Data!\")\r\n    //   })\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <form onSubmit={formSubmitHandler}>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Email address</label>\r\n          <input type=\"email\" required className=\"form-control\" name=\"email\" defaultValue=\"test@gmail.com\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Password</label>\r\n          <input type=\"password\" required className=\"form-control\" name=\"password\" defaultValue=\"test\" />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Login;","import getAxiosIntance from \"../axiosInstance\"\r\n\r\n\r\nexport const getAllPosts = ()=>{\r\n  return getAxiosIntance().get(\"/posts?_limit=5\")\r\n}\r\n\r\nexport const getPostById = (id)=>{\r\n  return getAxiosIntance().get(`/posts/${id}`)\r\n}\r\n\r\nexport const updatePost = (id, updatedPost)=>{\r\n  return getAxiosIntance(true).put(`/posts/${id}`, updatedPost)\r\n}\r\n\r\nexport const deletePost = (id)=>{\r\n  return getAxiosIntance(true).delete(`/posts/${id}`)\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deletePost, getAllPosts } from \"../../axios/httpServices/post\";\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport './posts.css'\r\n\r\nconst Posts = () => {\r\n\r\n  const userDate = useSelector((state) => state.user)\r\n  const [posts, setPosts] = useState([])\r\n\r\n  useEffect(()=>{\r\n    getAllPosts()\r\n      .then(res => {\r\n        const posts = res.data;\r\n        setPosts(posts)\r\n      })\r\n  }, [])\r\n\r\n  const deleteHandler = (postId)=>{\r\n    if(userDate.isAdmin){\r\n      deletePost(postId)\r\n      .then(res => {\r\n        // update Posts\r\n        getAllPosts()\r\n          .then(res => {\r\n            const posts = res.data;\r\n            setPosts(posts)\r\n          })\r\n      })\r\n    }\r\n  }\r\n\r\n  return <div className=\"posts\">\r\n    <h3 className=\"text-center mb-5\">All Posts</h3>\r\n\r\n    <Link to=\"/newpost\" className=\"btn btn-success\">Add New Post</Link>\r\n\r\n    {\r\n      posts.length > 0 && <ul className=\"posts\">\r\n        {\r\n          posts.map(post => <li key={post.id}>\r\n            <h4>{ post.title }</h4>\r\n            <p>{ post.body }</p>\r\n            { userDate.isAdmin && <Link to={`/editpost/${post.id}`} className=\"btn btn-primary\">Edit</Link> }\r\n            { userDate.isAdmin && <button className=\"btn btn-danger ms-2\" onClick={()=>{deleteHandler(post.id)}}>Delete</button> }\r\n          </li>)\r\n        }\r\n      </ul>\r\n    }\r\n  </div>;\r\n}\r\n \r\nexport default Posts;","import { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPostById, updatePost } from \"../../axios/httpServices/post\";\r\n\r\nconst EditPost = () => {\r\n\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n  const [post, setPost] = useState()\r\n\r\n  useEffect(()=>{\r\n    getPostById(id)\r\n      .then(res => {\r\n        setPost(res.data)\r\n      })\r\n  }, [id])\r\n\r\n  const formSubmitHandler = (e)=>{\r\n    e.preventDefault();\r\n\r\n    const form = new FormData(e.target);\r\n\r\n    const updatedPost = {\r\n      id: id,\r\n      title: form.get(\"title\"),\r\n      body: form.get(\"body\")\r\n    }\r\n    \r\n    updatePost(id, updatedPost)\r\n      .then(() =>{\r\n        alert(\"Updated Successfully!\")\r\n        history.replace(\"/\")\r\n      })\r\n      .catch(res => {\r\n        console.log(res)\r\n      })\r\n  }\r\n\r\n\r\n  return <div className=\"editPost\">\r\n    {\r\n      post !== undefined && <form onSubmit={formSubmitHandler}>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Email address</label>\r\n          <input type=\"text\" required className=\"form-control\" name=\"title\" defaultValue={ post.title } />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Password</label>\r\n          <textarea rows=\"5\" required className=\"form-control\" name=\"body\" defaultValue={ post.body } />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n        <Link to=\"/posts\" className=\"btn btn-success ms-2\">Cancel</Link>\r\n      </form>\r\n    }\r\n  </div>;\r\n}\r\n \r\nexport default EditPost;","import './App.css';\nimport Nav from './components/nav/nav';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from './pages/home/home';\nimport Login from './pages/login/login';\nimport Posts from './pages/posts/posts';\nimport EditPost from './pages/editPost/editPost';\nimport { useSelector } from 'react-redux'\n\n\nconst App = ()=>{\n\n  const userDate = useSelector((state) => state.user)\n\n\n  return (\n    <div className=\"App\">\n      <Nav />\n\n      <div className=\"container py-5\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            {\n              !userDate.isLoggedIn ? <Login /> : <Redirect to=\"/\" />\n            }\n          </Route>\n          <Route path=\"/posts\">\n            {\n              userDate.isLoggedIn ? <Posts /> : <Redirect to=\"/\" />\n            }\n          </Route>\n          <Route path=\"/editpost/:id\">\n            {\n              userDate.isLoggedIn && userDate.isAdmin ? <EditPost /> : <Redirect to=\"/\" />\n            }\n          </Route>\n        </Switch> \n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport userReducer from './slices/loginSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer\r\n  },\r\n}) ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>,\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}