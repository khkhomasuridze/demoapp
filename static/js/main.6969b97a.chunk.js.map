{"version":3,"sources":["redux/slices/loginSlice.js","components/nav/nav.js","pages/home/home.js","axios/axiosInstance.js","pages/login/login.js","axios/httpServices/account.js","axios/httpServices/post.js","pages/posts/posts.js","pages/editPost/editPost.js","pages/newPost/newPost.js","App.js","redux/store.js","index.js"],"names":["initialState","isLoggedIn","isAdmin","email","token","localStorage","loginSlice","createSlice","name","reducers","login","state","action","payload","setItem","logout","removeItem","actions","Nav","userDate","useSelector","user","dispatch","useDispatch","className","to","id","onClick","Home","getAxiosIntance","isTokenRequired","headers","getItem","instance","axios","create","baseURL","Login","onSubmit","e","preventDefault","loginData","form","FormData","target","formDateObj","get","password","post","then","res","data","is_admin","catch","alert","type","required","defaultValue","getAllPosts","Posts","useState","posts","setPosts","useEffect","deleteHandler","postId","delete","length","map","title","body","EditPost","useParams","history","useHistory","setPost","getPostById","undefined","updatedPost","put","updatePost","replace","console","log","rows","NewPost","newPost","addPost","App","path","exact","store","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAEMA,EAAe,CACnBC,YAAY,EACZC,SAAS,EACTC,MAAO,KACPC,MAAO,MAGNC,aAAaD,QACdJ,EAAaC,YAAa,EAC1BD,EAAaE,QAAkC,SAAxBG,aAAaH,QACpCF,EAAaG,MAAQE,aAAaF,MAClCH,EAAaI,MAAQC,aAAaD,OAG7B,IAAME,EAAaC,YAAY,CACpCC,KAAM,QACNR,eACAS,SAAU,CACRC,MAAO,SAACC,EAAOC,GACbD,EAAMV,YAAa,EACnBU,EAAMT,QAAUU,EAAOC,QAAQX,QAC/BS,EAAMR,MAAQS,EAAOC,QAAQV,MAC7BQ,EAAMP,MAAQQ,EAAOC,QAAQT,MAE7BC,aAAaS,QAAQ,QAASF,EAAOC,QAAQT,OAC7CC,aAAaS,QAAQ,QAASF,EAAOC,QAAQV,OAC7CE,aAAaS,QAAQ,UAAWF,EAAOC,QAAQX,UAEjDa,OAAQ,SAACJ,GACPA,EAAMV,YAAa,EACnBU,EAAMP,MAAQ,KACdC,aAAaW,WAAW,SACxBX,aAAaW,WAAW,SACxBX,aAAaW,WAAW,eAMvB,EAA0BV,EAAWW,QAA7BP,EAAR,EAAQA,MAAOK,EAAf,EAAeA,OACPT,IAAf,Q,OCGeY,EAvCH,WAGV,IAAMC,EAAWC,aAAY,SAACT,GAAD,OAAWA,EAAMU,QACxCC,EAAWC,cAEjB,OAAO,qBAAKC,UAAU,gDAAf,SACL,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAASA,UAAU,eAAeC,GAAG,IAArC,oBACA,sBAAKD,UAAU,2BAA2BE,GAAG,YAA7C,UACE,qBAAIF,UAAU,aAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,IAAjC,qBAGCN,EAASlB,YAAc,oBAAIuB,UAAU,WAAd,SACtB,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,SAAjC,qBAIFN,EAASlB,YAAc,oBAAIuB,UAAU,mBAAd,SACrB,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,SAAjC,wBAMJN,EAASlB,YAAc,oBAAIuB,UAAU,qBAAd,SACrB,oBAAIA,UAAU,WAAd,SACE,yBAAQA,UAAU,kBAAkBG,QAAS,kBAAKL,EAASP,MAA3D,sBAAiFI,EAAShB,sB,OC/BzFyB,EAJF,WACX,OAAO,oBAAIJ,UAAU,mBAAd,6B,yBCiBMK,EAhBS,WAA4B,IAA3BC,EAA0B,wDAE3CC,EAAU,GAEbD,IACDC,EAAO,cAAP,iBAAqC1B,aAAa2B,QAAQ,WAG5D,IAAMC,EAAWC,IAAMC,OAAO,CAC5BC,QAAS,4BACTL,YAGF,OAAOE,GCsCMI,EAhDD,WAEZ,IAAMf,EAAWC,cA6BjB,OACE,qBAAKC,UAAU,aAAf,SACE,uBAAMc,SA7BgB,SAACC,GAEzBA,EAAEC,iBAEF,ICVsBC,EDUhBC,EAAO,IAAIC,SAASJ,EAAEK,QAEtBC,EAAc,CAClB1C,MAAOuC,EAAKI,IAAI,SAChBC,SAAUL,EAAKI,IAAI,cCdCL,EDiBZI,EChBLhB,IAAkBmB,KAAK,aAAcP,IDiBvCQ,MAAK,SAAAC,GACJ5B,EAASZ,EAAM,CACbR,QAAoC,IAA3BgD,EAAIC,KAAK9B,KAAK+B,SACvBhD,MAAO8C,EAAIC,KAAK/C,MAChBD,MAAO+C,EAAIC,KAAK9B,KAAKlB,YAIxBkD,OAAM,SAAAH,GACLI,MAAM,qBAQR,UACE,sBAAK9B,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,2BACA,uBAAO+B,KAAK,QAAQC,UAAQ,EAAChC,UAAU,eAAehB,KAAK,QAAQiD,aAAa,uBAElF,sBAAKjC,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,sBACA,uBAAO+B,KAAK,WAAWC,UAAQ,EAAChC,UAAU,eAAehB,KAAK,WAAWiD,aAAa,gBAExF,wBAAQF,KAAK,SAAS/B,UAAU,kBAAhC,0B,QE5CKkC,EAAc,WACzB,OAAO7B,GAAgB,GAAMiB,IAAI,cCiDpBa,G,MA/CD,WAEZ,IAAMxC,EAAWC,aAAY,SAACT,GAAD,OAAWA,EAAMU,QAC9C,EAA0BuC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRL,IACGT,MAAK,SAAAC,GACJ,IAAMW,EAAQX,EAAIC,KAClBW,EAASD,QAEZ,IAEH,IAAMG,EAAgB,SAACC,GDAC,IAACvC,ECCpBP,EAASjB,UDDWwB,ECEVuC,EDDRpC,GAAgB,GAAMqC,OAAtB,2BAAiDxC,KCEnDuB,MAAK,SAAAC,GAEJQ,IACGT,MAAK,SAAAC,GACJ,IAAMW,EAAQX,EAAIC,KAClBW,EAASD,UAMnB,OAAO,sBAAKrC,UAAU,QAAf,UACL,oBAAIA,UAAU,mBAAd,uBAEA,cAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,kBAA9B,0BAGEqC,EAAMM,OAAS,GAAK,oBAAI3C,UAAU,QAAd,SAEhBqC,EAAMO,KAAI,SAAApB,GAAI,OAAI,+BAChB,6BAAMA,EAAKqB,QACX,4BAAKrB,EAAKsB,OACRnD,EAASjB,SAAW,cAAC,IAAD,CAAMuB,GAAE,oBAAeuB,EAAKtB,IAAMF,UAAU,kBAA5C,kBACpBL,EAASjB,SAAW,wBAAQsB,UAAU,sBAAsBG,QAAS,WAAKqC,EAAchB,EAAKtB,KAAzE,sBAJGsB,EAAKtB,cCoB3B6C,EAxDE,WAEf,IAAQ7C,EAAO8C,cAAP9C,GACF+C,EAAUC,cAChB,EAAwBd,qBAAxB,mBAAOZ,EAAP,KAAa2B,EAAb,KAEAZ,qBAAU,YFJe,SAACrC,GAC1B,OAAOG,GAAgB,GAAMiB,IAAtB,oBAAuCpB,KEI5CkD,CAAYlD,GACTuB,MAAK,SAAAC,GACJyB,EAAQzB,EAAIC,WAEf,CAACzB,IA2BJ,OAAO,qBAAKF,UAAU,WAAf,cAEMqD,IAAT7B,GAAsB,uBAAMV,SA3BN,SAACC,GACzBA,EAAEC,iBAEF,IAAME,EAAO,IAAIC,SAASJ,EAAEK,QAKtBkC,EAAc,CAClBpD,IAAKA,EACL2C,MAAO3B,EAAKI,IAAI,SAChBwB,KAAM5B,EAAKI,IAAI,UFlBK,SAACpB,EAAIoD,GAC7B,OAAOjD,GAAgB,GAAMkD,IAAtB,2BAA8CrD,GAAMoD,IEoBzDE,EAAYtD,EAAIoD,GACb7B,MAAK,WACJK,MAAM,yBACNmB,EAAQQ,QAAQ,aAEjB5B,OAAM,SAAAH,GACLgC,QAAQC,IAAIjC,OAOQ,UACpB,sBAAK1B,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,mBACA,uBAAO+B,KAAK,OAAOC,UAAQ,EAAChC,UAAU,eAAehB,KAAK,QAAQiD,aAAeT,EAAKqB,WAExF,sBAAK7C,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,yBACA,0BAAU4D,KAAK,IAAI5B,UAAQ,EAAChC,UAAU,eAAehB,KAAK,OAAOiD,aAAeT,EAAKsB,UAEvF,wBAAQf,KAAK,SAAS/B,UAAU,kBAAhC,oBACA,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,uBAA5B,0BCRO6D,EA1CC,WACd,IAAMZ,EAAUC,cAuBhB,OAAO,qBAAKlD,UAAU,WAAf,SAEH,uBAAMc,SAvBgB,SAACC,GACzBA,EAAEC,iBAEF,IAAME,EAAO,IAAIC,SAASJ,EAAEK,SHIT,SAAC0C,GACtB,OAAOzD,GAAgB,GAAMmB,KAAtB,mBAA+CsC,IGEpDC,CALgB,CACdlB,MAAO3B,EAAKI,IAAI,SAChBwB,KAAM5B,EAAKI,IAAI,UAIdG,MAAK,WACJK,MAAM,uBACNmB,EAAQQ,QAAQ,aAEjB5B,OAAM,SAAAH,GACLgC,QAAQC,IAAIjC,OAOd,UACE,sBAAK1B,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,mBACA,uBAAO+B,KAAK,OAAOC,UAAQ,EAAChC,UAAU,eAAehB,KAAK,aAE5D,sBAAKgB,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,yBACA,0BAAU4D,KAAK,IAAI5B,UAAQ,EAAChC,UAAU,eAAehB,KAAK,YAE5D,wBAAQ+C,KAAK,SAAS/B,UAAU,kBAAhC,iBACA,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,uBAA5B,0BCaOgE,EA3CH,WAEV,IAAMrE,EAAWC,aAAY,SAACT,GAAD,OAAWA,EAAMU,QAG9C,OACE,sBAAKG,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,qBAAKA,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiE,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,SAAZ,SAEKtE,EAASlB,WAAyB,cAAC,IAAD,CAAUwB,GAAG,MAAzB,cAAC,EAAD,MAG3B,cAAC,IAAD,CAAOgE,KAAK,SAAZ,SAEItE,EAASlB,WAAa,cAAC,EAAD,IAAY,cAAC,IAAD,CAAUwB,GAAG,QAGnD,cAAC,IAAD,CAAOgE,KAAK,gBAAZ,SAEItE,EAASlB,YAAckB,EAASjB,QAAU,cAAC,EAAD,IAAe,cAAC,IAAD,CAAUuB,GAAG,QAI1E,cAAC,IAAD,CAAOgE,KAAK,WAAZ,SAEItE,EAASlB,YAAckB,EAASjB,QAAU,cAAC,EAAD,IAAc,cAAC,IAAD,CAAUuB,GAAG,iBCxCtEkE,EAAQC,YAAe,CAClCC,QAAS,CACPxE,KAAMyE,KCIVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAFJ,SAMFO,SAASC,eAAe,W","file":"static/js/main.6969b97a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  isAdmin: false,\r\n  email: null,\r\n  token: null \r\n}\r\n\r\nif(localStorage.token){\r\n  initialState.isLoggedIn = true;\r\n  initialState.isAdmin = localStorage.isAdmin == 'false' ? false : true;\r\n  initialState.email = localStorage.email;\r\n  initialState.token = localStorage.token\r\n}\r\n\r\nexport const loginSlice = createSlice({\r\n  name: 'login',\r\n  initialState, \r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.isLoggedIn = true;\r\n      state.isAdmin = action.payload.isAdmin\r\n      state.email = action.payload.email \r\n      state.token = action.payload.token \r\n\r\n      localStorage.setItem(\"token\", action.payload.token)\r\n      localStorage.setItem(\"email\", action.payload.email)\r\n      localStorage.setItem(\"isAdmin\", action.payload.isAdmin)\r\n    },\r\n    logout: (state) => {\r\n      state.isLoggedIn = false\r\n      state.token = null \r\n      localStorage.removeItem(\"token\")\r\n      localStorage.removeItem(\"email\")\r\n      localStorage.removeItem(\"isAdmin\")\r\n    }\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { login, logout } = loginSlice.actions\r\nexport default loginSlice.reducer","import { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../redux/slices/loginSlice\";\r\n\r\n\r\nconst Nav = () => {\r\n\r\n\r\n  const userDate = useSelector((state) => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  return <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <div className=\"container-fluid\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\">Navbar</NavLink>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/\">Home</NavLink>\r\n          </li>\r\n          {\r\n            !userDate.isLoggedIn && <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n            </li>\r\n          }\r\n          {\r\n            userDate.isLoggedIn && <li className=\"nav-item ml-auto\">\r\n              <NavLink className=\"nav-link\" to=\"/posts\">Posts</NavLink>\r\n            </li>\r\n          }\r\n        </ul>\r\n\r\n        {\r\n          userDate.isLoggedIn && <ul className=\"navbar-nav ms-auto\">\r\n            <li className=\"nav-item\">\r\n              <button className=\"btn btn-success\" onClick={()=> dispatch(logout())}>LogOut - { userDate.email }</button>\r\n            </li>\r\n          </ul>\r\n        }\r\n        \r\n      </div>\r\n    </div>\r\n  </nav>\r\n}\r\n \r\nexport default Nav;","const Home = () => {\r\n  return <h3 className=\"text-center py-5\">Welcome Page 1</h3>;\r\n}\r\n \r\nexport default Home;","import axios from \"axios\"\r\n\r\nconst getAxiosIntance = (isTokenRequired = false)=>{\r\n\r\n  const headers = { }\r\n\r\n  if(isTokenRequired){\r\n    headers['Authorization'] = `Bearer ${localStorage.getItem(\"token\")}`\r\n  }\r\n\r\n  const instance = axios.create({\r\n    baseURL: 'https://jwt.vnadiradze.ge',\r\n    headers\r\n  });\r\n\r\n  return instance;\r\n}\r\n\r\nexport default getAxiosIntance;","import './login.css'\r\nimport { UserLogin } from '../../axios/httpServices/account';\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../../redux/slices/loginSlice';\r\n\r\nconst Login = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const formSubmitHandler = (e)=>{\r\n\r\n    e.preventDefault();\r\n\r\n    const form = new FormData(e.target);\r\n\r\n    const formDateObj = {\r\n      email: form.get(\"email\"),\r\n      password: form.get(\"password\")\r\n    }\r\n    \r\n    UserLogin(formDateObj)\r\n      .then(res => {\r\n        dispatch(login({\r\n          isAdmin: res.data.user.is_admin === 1,\r\n          token: res.data.token,\r\n          email: res.data.user.email,\r\n        }))\r\n\r\n      })\r\n      .catch(res => {\r\n        alert(\"Invalid Data!\")\r\n      })\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <form onSubmit={formSubmitHandler}>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Email address</label>\r\n          <input type=\"email\" required className=\"form-control\" name=\"email\" defaultValue=\"admin@gmail.com\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Password</label>\r\n          <input type=\"password\" required className=\"form-control\" name=\"password\" defaultValue=\"admin123\" />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Login;","import getAxiosIntance from \"../axiosInstance\"\r\n\r\n\r\nexport const UserLogin = (loginData)=>{\r\n  return getAxiosIntance().post(\"/api/login\", loginData)\r\n}","import getAxiosIntance from \"../axiosInstance\"\r\n\r\n\r\nexport const getAllPosts = ()=>{\r\n  return getAxiosIntance(true).get(\"api/posts\")\r\n}\r\n\r\nexport const getPostById = (id)=>{\r\n  return getAxiosIntance(true).get(`api/posts/${id}`)\r\n}\r\n\r\nexport const updatePost = (id, updatedPost)=>{\r\n  return getAxiosIntance(true).put(`api/posts/update/${id}`, updatedPost)\r\n}\r\n\r\nexport const addPost = (newPost)=>{\r\n  return getAxiosIntance(true).post(`api/posts/create`, newPost)\r\n}\r\n\r\nexport const deletePost = (id)=>{\r\n  return getAxiosIntance(true).delete(`api/posts/delete/${id}`)\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deletePost, getAllPosts } from \"../../axios/httpServices/post\";\r\nimport { useSelector } from 'react-redux'\r\nimport './posts.css'\r\n\r\nconst Posts = () => {\r\n\r\n  const userDate = useSelector((state) => state.user)\r\n  const [posts, setPosts] = useState([])\r\n\r\n  useEffect(()=>{\r\n    getAllPosts()\r\n      .then(res => {\r\n        const posts = res.data;\r\n        setPosts(posts)\r\n      })\r\n  }, [])\r\n\r\n  const deleteHandler = (postId)=>{\r\n    if(userDate.isAdmin){\r\n      deletePost(postId)\r\n      .then(res => {\r\n        // update Posts\r\n        getAllPosts()\r\n          .then(res => {\r\n            const posts = res.data;\r\n            setPosts(posts)\r\n          })\r\n      })\r\n    }\r\n  }\r\n\r\n  return <div className=\"posts\">\r\n    <h3 className=\"text-center mb-5\">All Posts</h3>\r\n\r\n    <Link to=\"/newpost\" className=\"btn btn-success\">Add New Post</Link>\r\n\r\n    {\r\n      posts.length > 0 && <ul className=\"posts\">\r\n        {\r\n          posts.map(post => <li key={post.id}>\r\n            <h4>{ post.title }</h4>\r\n            <p>{ post.body }</p>\r\n            { userDate.isAdmin && <Link to={`/editpost/${post.id}`} className=\"btn btn-primary\">Edit</Link> }\r\n            { userDate.isAdmin && <button className=\"btn btn-danger ms-2\" onClick={()=>{deleteHandler(post.id)}}>Delete</button> }\r\n          </li>)\r\n        }\r\n      </ul>\r\n    }\r\n  </div>;\r\n}\r\n \r\nexport default Posts;","import { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPostById, updatePost } from \"../../axios/httpServices/post\";\r\n\r\nconst EditPost = () => {\r\n\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n  const [post, setPost] = useState()\r\n\r\n  useEffect(()=>{\r\n    getPostById(id)\r\n      .then(res => {\r\n        setPost(res.data)\r\n      })\r\n  }, [id])\r\n\r\n  const formSubmitHandler = (e)=>{\r\n    e.preventDefault();\r\n\r\n    const form = new FormData(e.target);\r\n\r\n\r\n\r\n\r\n    const updatedPost = {\r\n      id: +id,\r\n      title: form.get(\"title\"),\r\n      body: form.get(\"body\")\r\n    }\r\n    \r\n    updatePost(+id, updatedPost)\r\n      .then(() =>{\r\n        alert(\"Updated Successfully!\")\r\n        history.replace(\"/posts\")\r\n      })\r\n      .catch(res => {\r\n        console.log(res)\r\n      })\r\n  }\r\n\r\n\r\n  return <div className=\"editPost\">\r\n    {\r\n      post !== undefined && <form onSubmit={formSubmitHandler}>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Title</label>\r\n          <input type=\"text\" required className=\"form-control\" name=\"title\" defaultValue={ post.title } />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Description</label>\r\n          <textarea rows=\"5\" required className=\"form-control\" name=\"body\" defaultValue={ post.body } />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n        <Link to=\"/posts\" className=\"btn btn-success ms-2\">Cancel</Link>\r\n      </form>\r\n    }\r\n  </div>;\r\n}\r\n \r\nexport default EditPost;","import { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addPost } from \"../../axios/httpServices/post\";\r\n\r\n\r\nconst NewPost = () => {\r\n  const history = useHistory()\r\n\r\n  const formSubmitHandler = (e)=>{\r\n    e.preventDefault();\r\n\r\n    const form = new FormData(e.target);\r\n\r\n    const newPost = {\r\n      title: form.get(\"title\"),\r\n      body: form.get(\"body\")\r\n    }\r\n    \r\n    addPost(newPost)\r\n      .then(() =>{\r\n        alert(\"Added Successfully!\")\r\n        history.replace(\"/posts\")\r\n      })\r\n      .catch(res => {\r\n        console.log(res)\r\n      })\r\n  }\r\n\r\n\r\n  return <div className=\"editPost\">\r\n    {\r\n      <form onSubmit={formSubmitHandler}>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Title</label>\r\n          <input type=\"text\" required className=\"form-control\" name=\"title\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Description</label>\r\n          <textarea rows=\"5\" required className=\"form-control\" name=\"body\"  />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Add</button>\r\n        <Link to=\"/posts\" className=\"btn btn-success ms-2\">Cancel</Link>\r\n      </form>\r\n    }\r\n  </div>;\r\n}\r\n \r\nexport default NewPost;","import './App.css';\nimport Nav from './components/nav/nav';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from './pages/home/home';\nimport Login from './pages/login/login';\nimport Posts from './pages/posts/posts';\nimport EditPost from './pages/editPost/editPost';\nimport { useSelector } from 'react-redux'\nimport NewPost from './pages/newPost/newPost';\n\n\nconst App = ()=>{\n\n  const userDate = useSelector((state) => state.user)\n\n\n  return (\n    <div className=\"App\">\n      <Nav />\n\n      <div className=\"container py-5\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            {\n              !userDate.isLoggedIn ? <Login /> : <Redirect to=\"/\" />\n            }\n          </Route>\n          <Route path=\"/posts\">\n            {\n              userDate.isLoggedIn ? <Posts /> : <Redirect to=\"/\" />\n            }\n          </Route>\n          <Route path=\"/editpost/:id\">\n            {\n              userDate.isLoggedIn && userDate.isAdmin ? <EditPost /> : <Redirect to=\"/\" />\n            }\n          </Route>\n\n          <Route path=\"/newpost\">\n            {\n              userDate.isLoggedIn && userDate.isAdmin ? <NewPost /> : <Redirect to=\"/\" />\n            }\n          </Route>\n        </Switch> \n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport userReducer from './slices/loginSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer\r\n  },\r\n}) ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>,\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}